% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crSKAT_fit_null.R
\name{crICSKAT_fit_null}
\alias{crICSKAT_fit_null}
\title{crSKAT_fit_null.R}
\usage{
crICSKAT_fit_null(
  init_beta,
  leftDmat,
  rightDmat,
  deltaVec,
  leftTimes,
  gSummed,
  allowSingular = TRUE,
  method = c("Broyden", "Newton")
)
}
\arguments{
\item{init_beta}{(p+nknots+2)*1 vector of coefficients to initialize.}

\item{leftDmat}{n*(p+nknots+2) design matrix for left end of interval.}

\item{rightDmat}{n*(p+nknots+2) design matrix for right end of interval.}

\item{deltaVec}{n*1 vector of the event cause (cause 1 or 2; or right-censored 0).}

\item{leftTimes}{n*1 vector of left interval times.}

\item{gSummed}{n*1 vector of summed genotype matrix.}

\item{allowSingular}{A logical value indicating if a small correction to the Jacobian when it is singular or too ill-conditioned is allowed.}

\item{method}{The method to use for finding a solution.}
}
\value{
A list with the elements:
\item{beta_fit}{(p+nknots+2)*1 vector of fitted coefficients under null model.}
\item{iter}{Number of iterations needed to converge.}
\item{times}{Number of times to add variation to the initial coefficients.}
\item{Msg}{A string describing the termination code of the nonlinear equations with Broyden or Newton.}
\item{termcd}{Termination code as integer.}
\item{err}{Value is 0 if no errors and 1 if it can't perform fit.}
\item{errMsg}{Empty string if err=0, explains error if there is one.}
}
\description{
Fit the null model (cubic basis spline for baseline cumulative hazard and coefficients
for non-genetic coefficiens) for interval-censored competing risks SKAT.
}
\examples{
seed <- 2022
n <- 300000
q <- 20
alpha1 <- -0.058
alpha2 <- -0.035
beta1 <- 0.03
beta2 <- log(1 - exp(beta1 / alpha1)) * alpha2
outcomeDat <- genData(seed=seed, n=n, alpha1=alpha1, alpha2=alpha2, beta1=beta1, beta2=beta2)
xMat <- matrix(data=rnorm(n), nrow=n)
gMat <- matrix(data=rbinom(n=n*q, size=2, prob=0.3), ncol=q)
gSummed <- matrix(data=apply(gMat, 1, sum), ncol=1)
obsTimes <- 1:5
lt <- outcomeDat$leftTimes
rt <- outcomeDat$rightTimes
obsInd <- outcomeDat$deltaVecSimple
dmats <- makeICdmat(xMat = xMat, lt = lt, rt = rt, obsInd = obsInd, quant_r = NULL, nKnots = 1)
crICSKAT_fit_null(init_beta=rep(0, 9), leftDmat=dmats$left_dmat, rightDmat=dmats$right_dmat,
deltaVec=outcomeDat$deltaVec, leftTimes=outcomeDat$leftTimes, gSummed=gSummed, allowSingular=TRUE, method="Broyden")

}
